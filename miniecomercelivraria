
package miniEcommerceLivraria;

import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Biblioteca biblioteca = new Biblioteca();
        ArrayList<Usuario> usuarios = new ArrayList<>();

        int opcao;
        do {
            System.out.println("\n===== MINI E-COMMERCE DE LIVRARIA =====");
            System.out.println("1 - Adicionar livro");
            System.out.println("2 - Listar livros");
            System.out.println("3 - Buscar livro");
            System.out.println("4 - Remover livro");
            System.out.println("5 - Cadastrar usuário");
            System.out.println("6 - Listar usuários");
            System.out.println("0 - Sair");
            System.out.print("Escolha: ");
            opcao = sc.nextInt();
            sc.nextLine();

            switch (opcao) {
                case 1:
                    System.out.print("Título: ");
                    String titulo = sc.nextLine();
                    System.out.print("Autor: ");
                    String autor = sc.nextLine();
                    System.out.print("Preço: ");
                    double preco = sc.nextDouble();
                    System.out.print("Estoque: ");
                    int estoque = sc.nextInt();
                    System.out.print("Ano de publicação: ");
                    int ano = sc.nextInt();
                    sc.nextLine();
                    biblioteca.adicionarLivro(new Livro(titulo, autor, preco, estoque, ano));
                    break;

                case 2:
                    biblioteca.listarLivros();
                    break;

                case 3:
                    System.out.print("Digite o título: ");
                    String buscar = sc.nextLine();
                    Livro l = biblioteca.buscarLivro(buscar);
                    if (l != null) l.exibirInformacoes();
                    else System.out.println(" Livro não encontrado.");
                    break;

                case 4:
                    System.out.print("Digite o título: ");
                    String remover = sc.nextLine();
                    biblioteca.removerLivro(remover);
                    break;

                case 5:
                    System.out.print("Nome: ");
                    String nome = sc.nextLine();
                    System.out.print("Tipo (Cliente/Admin): ");
                    String tipo = sc.nextLine();
                    usuarios.add(new Usuario(nome, tipo));
                    System.out.println(" Usuário cadastrado!");
                    break;

                case 6:
                    if (usuarios.isEmpty()) System.out.println("Nenhum usuário cadastrado.");
                    else usuarios.forEach(Usuario::exibirDados);
                    break;

                case 0:
                    System.out.println("Saindo...");
                    break;

                default:
                    System.out.println("Opção inválida!");
            }
        } while (opcao != 0);

        sc.close();
    }
}




















package miniEcommerceLivraria;

public class Livro {
    private String titulo;
    private String autor;
    private double preco;
    private int estoque;
    private int anoPublicacao;
    private boolean disponivel;

    public Livro(String titulo, String autor, double preco, int estoque, int anoPublicacao) {
        this.titulo = titulo;
        this.autor = autor;
        this.preco = preco;
        this.estoque = estoque;
        this.anoPublicacao = anoPublicacao;
        this.disponivel = estoque > 0;
    }

    // Getters e Setters
    public String getTitulo() { return titulo; }
    public double getPreco() { return preco; }
    public boolean isDisponivel() { return disponivel; }

    public void alterarDisponibilidade(boolean status) {
        this.disponivel = status;
    }

    public void exibirInformacoes() {
        System.out.println("Título: " + titulo);
        System.out.println("Autor: " + autor);
        System.out.println("Preço: R$" + preco);
        System.out.println("Estoque: " + estoque);
        System.out.println("Ano: " + anoPublicacao);
        System.out.println("Disponível: " + (disponivel ? "Sim" : "Não"));
        System.out.println("-------------------------------");
    }

    public void vender(int quantidade) {
        if (estoque >= quantidade) {
            estoque -= quantidade;
            if (estoque == 0) disponivel = false;
            System.out.println("Venda realizada! Estoque atual: " + estoque);
        } else {
            System.out.println("Estoque insuficiente para venda.");
        }
    }
}
















package miniEcommerceLivraria;

import java.util.ArrayList;
import java.util.List;

public class Carrinho {
    private List<Livro> livros = new ArrayList<>();

    public void adicionarLivro(Livro livro) {
        livros.add(livro);
    }

    public void removerLivro(Livro livro) {
        livros.remove(livro);
    }

    public void exibirCarrinho() {
        if (livros.isEmpty()) {
            System.out.println("Carrinho vazio!");
        } else {
            for (Livro livro : livros) {
                livro.exibirInformacoes();
            }
        }
    }

    public double calcularTotal() {
        double total = 0.0;
        for (Livro livro : livros) {
            total += livro.getPreco();
        }
        return total;
    }

    public void finalizarCompra() {
        if (livros.isEmpty()) {
            System.out.println("Carrinho vazio. Nenhuma compra a finalizar.");
            return;
        }
        System.out.println("Compra finalizada! Total: R$ " + calcularTotal());
        livros.clear();
    }
}










package miniEcommerceLivraria;

public class Usuario {
    private String nome;
    private String tipoUsuario; // Ex: "Cliente" ou "Administrador"

    public Usuario(String nome, String tipoUsuario) {
        this.nome = nome;
        this.tipoUsuario = tipoUsuario;
    }

    // Getters e Setters
    public String getNome() { return nome; }
    public void setNome(String nome) { this.nome = nome; }

    public String getTipoUsuario() { return tipoUsuario; }
    public void setTipoUsuario(String tipoUsuario) { this.tipoUsuario = tipoUsuario; }

    // Método
    public void exibirDados() {
        System.out.println("Usuário: " + nome);
        System.out.println("Tipo: " + tipoUsuario);
        System.out.println("-------------------------------");
    }
}
















import java.util.ArrayList;

package miniEcommerceLivraria;

public class Biblioteca {
    private ArrayList<Livro> acervo = new ArrayList<>();

    public void adicionarLivro(Livro livro) {
        acervo.add(livro);
        System.out.println("Livro adicionado!");
    }

    public Livro buscarLivro(String titulo) {
        for (Livro l : acervo) {
            if (l.getTitulo().equalsIgnoreCase(titulo)) {
                return l;
            }
        }
        return null;
    }

    public void listarLivros() {
        if (acervo.isEmpty()) {
            System.out.println(" Nenhum livro cadastrado.");
        } else {
            for (Livro l : acervo) {
                l.exibirInformacoes();
            }
        }
    }

    public void removerLivro(String titulo) {
        Livro livro = buscarLivro(titulo);
        if (livro != null) {
            acervo.remove(livro);
            System.out.println(" Livro removido com sucesso!");
        } else {
            System.out.println(" Livro não encontrado.");
        }
    }
}















package miniEcommerceLivraria;

import java.time.LocalDate;

public class Emprestimo {
    private LocalDate dataEmprestimo;
    private LocalDate dataDevolucao;
    private boolean devolvido;
    private Usuario usuario;
    private Livro livro;

    public Emprestimo(Usuario usuario, Livro livro) {
        this.usuario = usuario;
        this.livro = livro;
        this.dataEmprestimo = LocalDate.now();
        this.dataDevolucao = dataEmprestimo.plusDays(7); // prazo padrão: 7 dias
        this.devolvido = false;
        livro.alterarDisponibilidade(false);
    }

    public void registrarDevolucao() {
        this.devolvido = true;
        livro.alterarDisponibilidade(true);
        System.out.println(" Devolução registrada!");
    }

    public boolean verificarAtraso() {
        return !devolvido && LocalDate.now().isAfter(dataDevolucao);
    }

    public void exibirDadosEmprestimo() {
        System.out.println("Usuário: " + usuario.getNome());
        System.out.println("Livro: " + livro.getTitulo());
        System.out.println("Data Empréstimo: " + dataEmprestimo);
        System.out.println("Data Devolução: " + dataDevolucao);
        System.out.println("Devolvido: " + (devolvido ? "Sim" : "Não"));
        if (verificarAtraso()) {
            System.out.println(" Empréstimo em atraso!");
        }
        System.out.println("-------------------------------");
    }
}

